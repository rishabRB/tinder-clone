[{"/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/index.js":"1","/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/App.js":"2","/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/pages/home.js":"3","/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/pages/onboarding.js":"4","/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/pages/Dashboard.js":"5","/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/NavBar.js":"6","/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/ChatContainer.js":"7","/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/AuthModal.js":"8","/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/ChatHeader.js":"9","/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/MatchDisplay.js":"10","/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/ChatDisplay.js":"11","/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/Chat.js":"12","/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/ChatInput.js":"13"},{"size":432,"mtime":1654352244825,"results":"14","hashOfConfig":"15"},{"size":671,"mtime":1655642873612,"results":"16","hashOfConfig":"15"},{"size":834,"mtime":1654352244825,"results":"17","hashOfConfig":"15"},{"size":5134,"mtime":1654352244825,"results":"18","hashOfConfig":"15"},{"size":2563,"mtime":1657261172733,"results":"19","hashOfConfig":"15"},{"size":577,"mtime":1654352244821,"results":"20","hashOfConfig":"15"},{"size":767,"mtime":1658573650111,"results":"21","hashOfConfig":"15"},{"size":2861,"mtime":1655728551788,"results":"22","hashOfConfig":"15"},{"size":734,"mtime":1655881251052,"results":"23","hashOfConfig":"15"},{"size":947,"mtime":1657267150297,"results":"24","hashOfConfig":"15"},{"size":1774,"mtime":1658598898402,"results":"25","hashOfConfig":"15"},{"size":473,"mtime":1658593281464,"results":"26","hashOfConfig":"15"},{"size":897,"mtime":1658599060354,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dqq5e8",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/index.js",[],[],"/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/App.js",["78","79"],[],"import Home from \"./pages/home\"\nimport Dashboard from \"./pages/Dashboard\"\nimport Onboarding from \"./pages/onboarding\"\nimport { BrowserRouter , Routes, Route } from \"react-router-dom\"\nimport { useCookies } from \"react-cookie\"\n\nfunction App() {\n\n\tconst [cookies,setCookies,removeCookies] = useCookies(['user'])\n    const authToken = cookies.AuthToken\n\tconsole.log(authToken)\n\n  return (\n    <BrowserRouter>\n\t <Routes>\n\t   <Route path={\"/\"} element={<Home />} />\n\t    {authToken && <Route path={\"/dashboard\"} element={<Dashboard />} /> }\n\t    {authToken && <Route path={\"/onboarding\"} element={<Onboarding />} />}\n\t </Routes>  \n\t</BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/pages/home.js",[],[],"/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/pages/onboarding.js",["80","81"],[],"/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/pages/Dashboard.js",["82","83","84","85"],[],"import TinderCard from 'react-tinder-card'\nimport { useEffect, useState } from 'react'\nimport ChatContainer from '../components/ChatContainer'\nimport axios from 'axios'\nimport {useCookies} from 'react-cookie'\nconst Dashboard = () => {\n\n    const [user, setUser] = useState(null)\n    const [genderedUsers,setGenderedUser]=useState(null)\n    const [lastDirection, setLastDirection] = useState()\n\t  const [cookies,setCookie,removeCookie] = useCookies(['user'])\n   \tconst userId=cookies.userID\n\n    const getUser=async()=>{\n\t  try{\n\t    const response = await axios.get('http://localhost:8000/users/user',{\n\t\t  params:{userId}\n\t\t})\n\t    setUser(response.data)\n\t  }\n\t  catch(err){\n\t    console.log(err)\n\t  }\n\t}\n\n  const getGenderedUser= async()=>{\n    try{\n      const response=await axios.get('http://localhost:8000/users/gendered_user',{\n        params:{gender:user?.gender_interest}\n      })\n      setGenderedUser(response.data)\n    }\n    catch(error){\n      console.log(error)\n    }\n  }\n\n\n  useEffect(()=>{\n    getUser()\n  },[])\n\n\n\tuseEffect(()=>{\n  if(user) getGenderedUser()\n\t},[user])\n\n\n  const updateUserMatch=async(swipedUserId)=>{\n    try{\n      await axios.put('http://localhost:8000/users/addmatch',{\n        userId,\n        matchUserId:swipedUserId\n      })\n\n      getUser()\n    }\n    catch(err){\n      console.log(err)\n    }\n  }\n  \n\n \n  const swiped = (direction, swipedUserId) => {\n      if(direction === 'right'){\n        updateUserMatch(swipedUserId)\n      }\n      setLastDirection(direction)\n  } \n\n  const matchedUserIds=user?.matches.map(({user_id})=>user_id).concat(userId)\n\n  const filteredUserIds=genderedUsers?.filter(\n    genderedUser=> !matchedUserIds.includes(genderedUser.user_id)\n    )\n\n\n\n  const outOfFrame = (name) => {\n    console.log(name + ' left the screen!')\n  }\n\n\n\treturn (\t \n    <>\n    {user &&\n\t\t<div className=\"dashboard\">\n\t\t  <ChatContainer user={user} />\n\t\t\t<div className=\"swipe-container\">\n\t\t\t<div className=\"card-container\">\n\t        {filteredUserIds?.map((character) =>\n          <TinderCard \n\t\t\tclassName='swipe' \n\t\t\tkey={character.user_id} \n\t\t\tonSwipe={(dir) => swiped(dir, character.user_id)} \n\t\t\tonCardLeftScreen={() => outOfFrame(character.first_name)}>\n\n            <div style={{ backgroundImage: 'url(' + character.url + ')' }} className='card'>\n              <h3>{character.name}</h3>\n            </div>\n          </TinderCard>\n        )}\n\t\t\t<div className=\"swipe-info\">\n\t\t\t {lastDirection && <p>You swiped {lastDirection} </p> }\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\n\t\t</div>\n    }\n    </>\n\t)\n}\n\nexport default Dashboard\n",["86","87"],"/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/NavBar.js",[],[],"/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/ChatContainer.js",[],[],["88","89"],"/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/AuthModal.js",["90","91"],[],"import android from \"../imges/03aed264f8539c570e9bc80ba6b60d92.webp\"\nimport ios from \"../imges/d256a5b510a685030be375c63a9010e9.webp\"\nimport axios from 'axios'\nimport {useCookies} from 'react-cookie'\nimport { useState } from \"react\"\nimport {useNavigate} from \"react-router-dom\"\n\n\nconst AuthModal = ({setShowModal,isSignUp}) => {\n\tconst [Email, setEmail] = useState(null)\n\tconst [password, setPassword] = useState(null)\n\tconst [confirmPassword, setconfirmPassword] = useState(null)\n    const [error, setError] = useState(null)\n\tconst [cookies,setCookie,removeCookie] = useCookies()\n\tconst navigate = useNavigate()\n\tconst handleClick=()=>{\n\t  setShowModal(false)\n\t}\n\n\tconst handleSubmit=async(e)=>{\n\t e.preventDefault()\n\t\ttry{\n\t      if( isSignUp &&\tpassword !== confirmPassword) {\n\t\t\t\tsetError('Password not match')\n\t\t\t    setTimeout(()=>setError(null),2000)\n\t\t\t    return \n\t\t}\n\t\t\t\t\n\t\t\tconst response=await axios.post(`http://localhost:8000/sign/${isSignUp ? 'signup' : 'login'}`,{\n\t\t\t\tEmail,\n\t\t\t\tpassword\n\t\t\t})\n            \n\n     \n\t\t\tsetCookie('Email',response.data.Email)\n\t\t\tsetCookie('AuthToken',response.data.AuthToken)\n\t\t\tsetCookie('userID',response.data.userId)\n\t\t\n\n\t\t\tconst success = response.status === 201\n\n\t\t\tif(success && isSignUp) navigate('/onboarding')\n\t\t\tif(success && !isSignUp) navigate('/dashboard')\n\n\t\t\twindow.location.reload()\n\n\t\t\t\n\n\t\t}\n\t\tcatch(error){\n\t\t\tif(error && isSignUp)\n\t\t\tsetError('User already exits! Please Log in')\n\n\t\t\tif(error && !isSignUp)\n\t\t\tsetError('Invalid credentials')\n\t\t}\n\t}\n\n\n\treturn (\n\t  <div className=\"auth-modal\">\n\t\t  <div  className=\"close-icon\" onClick={handleClick}>X</div>\n\t\t  <h2>{isSignUp ? 'CREATE ACCOUNT' : 'LOG IN'}</h2>\n\t\t  { error ?  <span className=\"error\">{error}</span>  : \" \"  }\n\t\t  <form onSubmit={handleSubmit}>\n\t\t\t  <input \n\t\t\t  type='email'\n\t\t\t  id='email'\n\t\t\t  name=\"email\"\n\t\t\t  placeholder=\"Email\"\n\t\t\t  required={true}\n\t\t\t  onChange={(e)=> setEmail(e.target.value)}\n\t\t\t  />\n\t\t\t  <input \n\t\t\t  type='password'\n\t\t\t  id='password'\n\t\t\t  name=\"password\"\n\t\t\t  placeholder=\"Password\"\n\t\t\t  required={true}\n\t\t\t  onChange={(e)=> setPassword(e.target.value)}\n\t\t\t  />\n\n\t\t\t  {isSignUp && <input \n\t\t\t  type='password'\n\t\t\t  id='confirm-password'\n\t\t\t  name=\"confirm-password\"\n\t\t\t  placeholder=\"Confirm password\"\n\t\t\t  required={true}\n\t\t\t  onChange={(e)=> setconfirmPassword(e.target.value)}\n\t\t\t  />\n\t\t\t  }\n\n\t\t\t  <p>By clicking Log in, you agree to our terms. Learn ow we process you data in our Privacy Policy</p>\n\t\t\t  <input className=\"secondary-button\"  type=\"submit\" value=\"Log In\"/>\n\t\t  </form>\n\n\t\t\t  <hr />\n\n\t\t\t  <h2>GET THE APP </h2>\n\n\t\t\t  <div className=\"app-logo-container\">\n\t\t\t\t  <div className=\"logo\">\n\t\t\t\t\t  <img alt=\"ios-logo\" src={ios} />\t\n\t\t\t\t  </div> \n\t\t\t\t  <div className=\"logo\">\n\t\t\t\t\t  <img alt=\"android-logo\" src={android} />\t\n\t\t\t\t  </div>\n\t\t\t  </div>\n\n\t  </div>\n\t)\n}\n\nexport default AuthModal\n",["92","93"],"/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/ChatHeader.js",["94"],[],"import {useCookies} from 'react-cookie'\nimport {useNavigate} from 'react-router-dom'\n\nconst ChatHeader = ({user}) => {\n\n\tconst [cookies,setCookie,removeCookie] = useCookies(['user'])\n\tconst navigate = useNavigate()\n   \nconst handleClick=()=>{\n\tremoveCookie('userID',cookies.userID)\n\tremoveCookie('AuthToken',cookies.AuthToken)\n\tremoveCookie('Email',cookies.Email)\n\tnavigate('/')\n\t\n}\n\n\treturn (\n\t  <div className=\"chat-container-header\">\n\t\t<div className=\"profile\">\n\t\t  <div className=\"img-container\">\n\t\t   <img src={user.url} alt={'photo of'+ user.first_name} />\n\t\t  </div>\n\t\t  <h3>{user.first_name}</h3>\n\t\t</div>\n         <button className='logout-btn' onClick={handleClick}>LOG OUT</button>\n\t\t</div>\n\t)\n}\n\nexport default ChatHeader\n","/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/MatchDisplay.js",["95"],[],"import axios from 'axios'\nimport { useEffect, useState } from 'react'\n\n\nconst MatchDisplay = ({matches,setClickedUser}) => {\n  \n\tconst [matchedProfiles,setMatchedProfile] = useState(null)\n\tconst matchUserIds = matches.map(({user_id}) => user_id)\n\tconst getMatch = async ()=>{\n\t\ttry{\n\t\t\tconst response = await axios.get('http://localhost:8000/users/alluser',{\n\t\t\t\tparams:{userIds:JSON.stringify(matchUserIds)}\n\t\t\t})\n\t\t\tsetMatchedProfile(response.data)\n\n\t\t}\n\t\tcatch(err){\n\t\t\tconsole.log(err)\n\t\t}\n\t}\n\n\tconsole.log(matchedProfiles)\n\tuseEffect(()=>{\n\t\tgetMatch()\n\t},[matches])\n\n\treturn (\n\t  <div className=\"match-display\">\n\t\t{matchedProfiles?.map((match,_index)=>(\n\t\t\t<div  key={{_index}} className='match-card' onClick={()=>setClickedUser(match)}>\n\t\t\t\t<div className='img-container'>\n\t\t\t\t\t<img src={match?.url} alt={match?.first_name + 'profile'} />\n\t\t\t\t</div>\n\t\t\t\t<h3>{match?.first_name}</h3>\n\t\t\t</div>\n\t\t))}\n\t\t</div>\n)}\n\nexport default MatchDisplay\n","/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/ChatDisplay.js",["96"],[],"import {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport Chat from '../components/Chat'\nimport ChatInput from '../components/ChatInput'\nconst ChatDisplay = ({user,clickedUser}) => {\n\n\tconst userId = user?.user_id\n\tconst crosspondingUserId = clickedUser?.user_id\n\tconst [userMessages , setUserMessages] = useState(null)\n\tconst [clickedUserMessage,setClickedUserMessage] = useState(null)\n\n\tconst getUserMessages = async ()=>{\n\t\ttry{\n\t\t\tconst response = await axios.get('http://localhost:8000/users/messages',{\n\t\t\t\tparams:{userId:userId,crosspondingUserId:crosspondingUserId}\n\t\t\t})\n\t\t\tsetUserMessages(response.data)\n\t\t}\n\t\tcatch(err){\n\t\t\tconsole.log(err)\n\t\t}\n\t}\n\n\tconst getClickedUserMessages = async (senderId,recipientsId)=>{\n\t\ttry{\n\t\t\tconst response = await axios.get('http://localhost:8000/users/messages',{\n\t\t\t\tparams:{userId:crosspondingUserId,crosspondingUserId:userId}\n\t\t\t})\n\t\t\tsetClickedUserMessage(response.data)\n\t\t}\n\t\tcatch(err){\n\t\t\tconsole.log(err)\n\t\t}\n\n\t}\n\n\n    useEffect(()=>{\n\t\tgetUserMessages()\n\t\tgetClickedUserMessages()\n\t},[])\n\n\tconst messages = []\n\n\tuserMessages?.forEach(message => {\n\t\tconst formattedMessages = {\n\t        name:user?.first_name,\n\t\t\timg:user?.url,\n\t\t\tmessage:message.message,\n\t\t\ttimestamp:message.timestamp \n\t\t}\n\t\tmessages.push(formattedMessages)\n\t})\n\nclickedUserMessage?.forEach(message=>{\n\tconst formattedMessage={\n\t\tname:clickedUser?.first_name,\n\t\timg:clickedUser?.url,\n\t\tmessage:message.message,\n\t\ttimestamp:message.timestamp\n\t}\n\tmessages.push(formattedMessage)\n})\n\nconst descendingOrderMessage = messages?.sort((a,b)=> b.timestamp - a.timestamp)\n\n\treturn (\n\t  <>\t\n\t  <Chat descendingOrderMessage = {descendingOrderMessage}/>\n\t  <ChatInput user={user} clickedUser={clickedUser}/>\n\t  </>\n\t)\n}\n\nexport default ChatDisplay\n",["97","98"],"/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/Chat.js",["99"],[],"const Chat = ({descendingOrderMessage}) => {\n\treturn (\n\t  <>\n\t\t  <div className=\"chat-display\">\n\t\t\t{descendingOrderMessage?.map((message,_index)=>(\n\t\t\t\t<div className='chat-display-wrapper' key={_index}>\n\t\t\t\t\t<div className = 'chat-message-header'>\n\t\t\t\t\t\t<div className = 'img-container'>\n\t\t\t\t\t\t\t<img src={message.img} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span>{message.name}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>{message.message}</p>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t  </div>\n\t  </>\n\t)\n}\n\nexport default Chat\n","/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/ChatInput.js",[],[],{"ruleId":"100","severity":1,"message":"101","line":9,"column":17,"nodeType":"102","messageId":"103","endLine":9,"endColumn":27},{"ruleId":"100","severity":1,"message":"104","line":9,"column":28,"nodeType":"102","messageId":"103","endLine":9,"endColumn":41},{"ruleId":"100","severity":1,"message":"105","line":7,"column":16,"nodeType":"102","messageId":"103","endLine":7,"endColumn":25},{"ruleId":"100","severity":1,"message":"106","line":7,"column":26,"nodeType":"102","messageId":"103","endLine":7,"endColumn":38},{"ruleId":"100","severity":1,"message":"105","line":11,"column":19,"nodeType":"102","messageId":"103","endLine":11,"endColumn":28},{"ruleId":"100","severity":1,"message":"106","line":11,"column":29,"nodeType":"102","messageId":"103","endLine":11,"endColumn":41},{"ruleId":"107","severity":1,"message":"108","line":41,"column":5,"nodeType":"109","endLine":41,"endColumn":7,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"111","line":46,"column":4,"nodeType":"109","endLine":46,"endColumn":10,"suggestions":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"100","severity":1,"message":"119","line":14,"column":9,"nodeType":"102","messageId":"103","endLine":14,"endColumn":16},{"ruleId":"100","severity":1,"message":"106","line":14,"column":27,"nodeType":"102","messageId":"103","endLine":14,"endColumn":39},{"ruleId":"113","replacedBy":"120"},{"ruleId":"115","replacedBy":"121"},{"ruleId":"100","severity":1,"message":"105","line":6,"column":17,"nodeType":"102","messageId":"103","endLine":6,"endColumn":26},{"ruleId":"107","severity":1,"message":"122","line":25,"column":4,"nodeType":"109","endLine":25,"endColumn":13,"suggestions":"123"},{"ruleId":"107","severity":1,"message":"124","line":41,"column":4,"nodeType":"109","endLine":41,"endColumn":6,"suggestions":"125"},{"ruleId":"113","replacedBy":"126"},{"ruleId":"115","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":9,"column":8,"nodeType":"130","endLine":9,"endColumn":33},"no-unused-vars","'setCookies' is assigned a value but never used.","Identifier","unusedVar","'removeCookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["131"],"React Hook useEffect has a missing dependency: 'getGenderedUser'. Either include it or remove the dependency array.",["132"],"no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],"'cookies' is assigned a value but never used.",["133"],["134"],"React Hook useEffect has a missing dependency: 'getMatch'. Either include it or remove the dependency array.",["135"],"React Hook useEffect has missing dependencies: 'getClickedUserMessages' and 'getUserMessages'. Either include them or remove the dependency array.",["136"],["133"],["134"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [getUser]",{"range":"145","text":"146"},"Update the dependencies array to be: [getGenderedUser, user]",{"range":"147","text":"148"},"Update the dependencies array to be: [getMatch, matches]",{"range":"149","text":"150"},"Update the dependencies array to be: [getClickedUserMessages, getUserMessages]",{"range":"151","text":"152"},[1024,1026],"[getUser]",[1079,1085],"[getGenderedUser, user]",[561,570],"[getMatch, matches]",[1055,1057],"[getClickedUserMessages, getUserMessages]"]