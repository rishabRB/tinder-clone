{"ast":null,"code":"var _jsxFileName = \"/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/ChatDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Chat from '../components/Chat';\nimport ChatInput from '../components/ChatInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatDisplay = _ref => {\n  _s();\n\n  let {\n    user,\n    clickedUser\n  } = _ref;\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const crosspondingUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const [userMessages, setUserMessages] = useState(null);\n\n  const getUserMessage = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/users/messages', {\n        params: {\n          user_id: userId,\n          crosspondingUserId: ce\n        }\n      });\n      setUserMessages(response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getUserMessage();\n  }, [userMessages]);\n  console.log(userMessages);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {\n      userMessage: userMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatDisplay, \"eIENWwoJaw/MOBoegqcmM1udf3Q=\");\n\n_c = ChatDisplay;\nexport default ChatDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"sources":["/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/ChatDisplay.js"],"names":["useEffect","useState","axios","Chat","ChatInput","ChatDisplay","user","clickedUser","userId","user_id","crosspondingUserId","userMessages","setUserMessages","getUserMessage","response","get","params","ce","data","err","console","log"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;;AACA,MAAMC,WAAW,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAuB;AAE3C,QAAMC,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,OAArB;AACA,QAAMC,kBAAkB,GAAGH,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEE,OAAxC;AACA,QAAM,CAACE,YAAD,EAAgBC,eAAhB,IAAmCX,QAAQ,CAAC,IAAD,CAAjD;;AACA,QAAMY,cAAc,GAAG,YAAU;AAChC,QAAG;AACF,YAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,sCAAV,EAAiD;AACvEC,QAAAA,MAAM,EAAC;AAACP,UAAAA,OAAO,EAACD,MAAT;AAAgBE,UAAAA,kBAAkB,EAACO;AAAnC;AADgE,OAAjD,CAAvB;AAGAL,MAAAA,eAAe,CAACE,QAAQ,CAACI,IAAV,CAAf;AACA,KALD,CAMA,OAAMC,GAAN,EAAU;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA;AACD,GAVD;;AAYGnB,EAAAA,SAAS,CAAC,MAAI;AACXa,IAAAA,cAAc;AACnB,GAFW,EAEV,CAACF,YAAD,CAFU,CAAT;AAIHS,EAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AAEA,sBACE;AAAA,4BACA,QAAC,IAAD;AAAO,MAAA,WAAW,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAMA,CA7BD;;GAAMN,W;;KAAAA,W;AA+BN,eAAeA,WAAf","sourcesContent":["import {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport Chat from '../components/Chat'\nimport ChatInput from '../components/ChatInput'\nconst ChatDisplay = ({user,clickedUser}) => {\n\n\tconst userId = user?.user_id\n\tconst crosspondingUserId = clickedUser?.user_id\n\tconst [userMessages , setUserMessages] = useState(null)\n\tconst getUserMessage = async ()=>{\n\t\ttry{\n\t\t\tconst response = await axios.get('http://localhost:8000/users/messages',{\n\t\t\t\tparams:{user_id:userId,crosspondingUserId:ce}\n\t\t\t})\n\t\t\tsetUserMessages(response.data)\n\t\t}\n\t\tcatch(err){\n\t\t\tconsole.log(err)\n\t\t}\n\t}\n\n    useEffect(()=>{\n       getUserMessage()\n\t},[userMessages])\n\n\tconsole.log(userMessages)\n\n\treturn (\n\t  <>\t\n\t  <Chat  userMessage={userMessages} />\n\t  <ChatInput />\n\t  </>\n\t)\n}\n\nexport default ChatDisplay\n"]},"metadata":{},"sourceType":"module"}