{"ast":null,"code":"var _jsxFileName = \"/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/ChatDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Chat from '../components/Chat';\nimport ChatInput from '../components/ChatInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatDisplay = _ref => {\n  _s();\n\n  let {\n    user,\n    clickedUser\n  } = _ref;\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const crosspondingUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const [userMessages, setUserMessages] = useState(null);\n  const [clickedUserMessage, setClickedUserMessage] = useState(null);\n\n  const getMessages = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/users/messages', {\n        params: {\n          userId: senderId,\n          crosspondingUserId: recipientsId\n        }\n      });\n      setUserMessages(response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getUserMessages = async (senderId, recipientsId) => {\n    try {\n      const response = await axios.get('http://localhost:8000/users/messages', {\n        params: {\n          userId: senderId,\n          crosspondingUserId: recipientsId\n        }\n      });\n      setUserMessages(response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    setUserMessages(getMessages(userId, crosspondingUserId));\n    setClickedUserMessage(getMessages(crosspondingUserId, userId));\n  }, [userMessages, clickedUserMessage]);\n  const messages = [];\n  userMessages === null || userMessages === void 0 ? void 0 : userMessages.forEach(message => {\n    const formattedMessages = {\n      name: user === null || user === void 0 ? void 0 : user.first_name,\n      img: user === null || user === void 0 ? void 0 : user.url,\n      message: message.message,\n      timestamp: message.timestamp\n    };\n    messages.push(formattedMessages);\n  });\n  console.log('usermessage', userMessages);\n  console.log('formattedMessage', messages);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatDisplay, \"PRhNtxTKgOBayDE5E2S4TNe5JNk=\");\n\n_c = ChatDisplay;\nexport default ChatDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"sources":["/Users/rishabbibhuty/Programmings/react/tinder/front-end/src/components/ChatDisplay.js"],"names":["useEffect","useState","axios","Chat","ChatInput","ChatDisplay","user","clickedUser","userId","user_id","crosspondingUserId","userMessages","setUserMessages","clickedUserMessage","setClickedUserMessage","getMessages","response","get","params","senderId","recipientsId","data","err","console","log","getUserMessages","messages","forEach","message","formattedMessages","name","first_name","img","url","timestamp","push"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport Chat from '../components/Chat'\nimport ChatInput from '../components/ChatInput'\nconst ChatDisplay = ({user,clickedUser}) => {\n\n\tconst userId = user?.user_id\n\tconst crosspondingUserId = clickedUser?.user_id\n\tconst [userMessages , setUserMessages] = useState(null)\n\tconst [clickedUserMessage,setClickedUserMessage] = useState(null)\n\n\tconst getMessages = async ()=>{\n\t\ttry{\n\t\t\tconst response = await axios.get('http://localhost:8000/users/messages',{\n\t\t\t\tparams:{userId:senderId,crosspondingUserId:recipientsId}\n\t\t\t})\n\t\t\tsetUserMessages(response.data)\n\t\t}\n\t\tcatch(err){\n\t\t\tconsole.log(err)\n\t\t}\n\t}\n\n\tconst getUserMessages = async (senderId,recipientsId)=>{\n\t\ttry{\n\t\t\tconst response = await axios.get('http://localhost:8000/users/messages',{\n\t\t\t\tparams:{userId:senderId,crosspondingUserId:recipientsId}\n\t\t\t})\n\t\t\tsetUserMessages(response.data)\n\t\t}\n\t\tcatch(err){\n\t\t\tconsole.log(err)\n\t\t}\n\n\t}\n\n\n    useEffect(()=>{\n       setUserMessages(getMessages(userId,crosspondingUserId))\n\t   setClickedUserMessage(getMessages(crosspondingUserId,userId))\n\t},[userMessages,clickedUserMessage])\n\n\tconst messages = []\n\n\tuserMessages?.forEach(message => {\n\t\tconst formattedMessages = {\n\t        name:user?.first_name,\n\t\t\timg:user?.url,\n\t\t\tmessage:message.message,\n\t\t\ttimestamp:message.timestamp \n\t\t}\n\t\tmessages.push(formattedMessages)\n\t})\n\n\tconsole.log('usermessage',userMessages)\n\tconsole.log('formattedMessage',messages)\n\n\n\treturn (\n\t  <>\t\n\t  <Chat/>\n\t  <ChatInput />\n\t  </>\n\t)\n}\n\nexport default ChatDisplay\n"]},"metadata":{},"sourceType":"module"}